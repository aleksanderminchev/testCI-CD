"""empty message

Revision ID: fa7dd37a64f0
Revises: 
Create Date: 2023-05-24 20:28:57.041538

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fa7dd37a64f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('PhoneLead',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('phone', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('contact_form_lead',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('started_course', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('phone', sa.String(length=256), nullable=True),
    sa.Column('terms_accepted', sa.Boolean(), nullable=True),
    sa.Column('newsletter_accepted', sa.Boolean(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('zip_code', sa.Integer(), nullable=True),
    sa.Column('adresse', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('high_school',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('higher_education_institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('higher_education_programme',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interest',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('language',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_language_uid'), 'language', ['uid'], unique=False)
    op.create_table('program',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('qualification',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('subjects',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('tutor',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('tutor_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('grade_average', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('age_interval', sa.String(), nullable=True),
    sa.Column('subjects', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('users',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_time', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=256), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_verified'), 'users', ['is_verified'], unique=False)
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_user_id'), 'admin', ['user_id'], unique=False)
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('stripe_id', sa.String(length=255), nullable=True),
    sa.Column('email_lesson_reminder', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('email_lesson_notes', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('customer_type', sa.Enum('independent', 'family', name='customertype'), server_default='independent', nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', name='statusenum'), server_default='inactive', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_customer_type'), 'customer', ['customer_type'], unique=False)
    op.create_index(op.f('ix_customer_status'), 'customer', ['status'], unique=False)
    op.create_index(op.f('ix_customer_stripe_id'), 'customer', ['stripe_id'], unique=False)
    op.create_index(op.f('ix_customer_user_id'), 'customer', ['user_id'], unique=False)
    op.create_table('teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_on_tw_at', sa.DateTime(), nullable=False),
    sa.Column('updated_on_tw_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('wage_per_hour', sa.Float(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('grade_average', sa.Float(), server_default='0', nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('open_for_new_students', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('payroll_id', sa.String(), nullable=True),
    sa.Column('bank_number', sa.String(), nullable=True),
    sa.Column('reg_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('zip_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('how_they_found', sa.String(), nullable=True),
    sa.Column('finished_highschool', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('lat', sa.String(), nullable=True),
    sa.Column('lng', sa.String(), nullable=True),
    sa.Column('lat_alternative', sa.String(), nullable=True),
    sa.Column('lng_alternative', sa.String(), nullable=True),
    sa.Column('internal_note', sa.Text(), nullable=True),
    sa.Column('application_reason', sa.Text(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', name='genderenum'), server_default='male', nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'prospective', name='teacherstatus'), server_default='prospective', nullable=False),
    sa.Column('age_interval', sa.String(), nullable=True),
    sa.Column('inactive_reason', sa.String(), nullable=True),
    sa.Column('has_second', sa.String(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=True),
    sa.Column('hour_interval', sa.String(), nullable=True),
    sa.Column('teachworks', sa.String(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teacher_gender'), 'teacher', ['gender'], unique=False)
    op.create_index(op.f('ix_teacher_open_for_new_students'), 'teacher', ['open_for_new_students'], unique=False)
    op.create_index(op.f('ix_teacher_status'), 'teacher', ['status'], unique=False)
    op.create_index(op.f('ix_teacher_user_id'), 'teacher', ['user_id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=64), nullable=False),
    sa.Column('access_expiration', sa.DateTime(), nullable=False),
    sa.Column('refresh_token', sa.String(length=64), nullable=False),
    sa.Column('refresh_expiration', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_access_token'), 'tokens', ['access_token'], unique=False)
    op.create_index(op.f('ix_tokens_refresh_token'), 'tokens', ['refresh_token'], unique=False)
    op.create_index(op.f('ix_tokens_user_id'), 'tokens', ['user_id'], unique=False)
    op.create_table('tutor_subject',
    sa.Column('Tutor', sa.Integer(), nullable=True),
    sa.Column('Subjects', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Subjects'], ['subjects.uid'], ),
    sa.ForeignKeyConstraint(['Tutor'], ['tutor.uid'], )
    )
    op.create_table('Tutor course',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('hashed_id', sa.String(length=256), nullable=True),
    sa.Column('crm_deal_id', sa.BigInteger(), nullable=True),
    sa.Column('tw_customer_id', sa.Integer(), nullable=True),
    sa.Column('tw_student_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('subjects', sa.String(length=256), nullable=False),
    sa.Column('math_programs', sa.String(length=256), nullable=True),
    sa.Column('class_grade', sa.String(length=80), nullable=True),
    sa.Column('education', sa.String(length=256), nullable=True),
    sa.Column('course_type', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.Column('hours_per_session', sa.Integer(), nullable=False),
    sa.Column('weekly_frequency', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('estimated_length', sa.String(length=256), nullable=False),
    sa.Column('unavailable_days', sa.String(length=256), nullable=True),
    sa.Column('status', sa.Enum('Pending', 'Taken', 'Cancelled', name='coursestatus'), server_default='Pending', nullable=False),
    sa.Column('taken_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['taken_by'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_Tutor course_crm_deal_id'), 'Tutor course', ['crm_deal_id'], unique=False)
    op.create_index(op.f('ix_Tutor course_hashed_id'), 'Tutor course', ['hashed_id'], unique=False)
    op.create_index(op.f('ix_Tutor course_status'), 'Tutor course', ['status'], unique=False)
    op.create_index(op.f('ix_Tutor course_taken_by'), 'Tutor course', ['taken_by'], unique=False)
    op.create_index(op.f('ix_Tutor course_tw_customer_id'), 'Tutor course', ['tw_customer_id'], unique=False)
    op.create_index(op.f('ix_Tutor course_tw_student_id'), 'Tutor course', ['tw_student_id'], unique=False)
    op.create_table('balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('hours_scheduled', sa.Float(), server_default='0', nullable=False),
    sa.Column('hours_free', sa.Float(), server_default='0', nullable=False),
    sa.Column('hours_used', sa.Float(), server_default='0', nullable=False),
    sa.Column('hours_ordered', sa.Float(), server_default='0', nullable=False),
    sa.Column('invoice_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('currency', sa.Enum('DKK', name='currencyenum'), server_default='DKK', nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_customer_id'), 'balance', ['customer_id'], unique=False)
    op.create_table('lesson',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('secret', sa.String(), nullable=True),
    sa.Column('trial_lesson', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('paid', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('space_id', sa.String(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('space', sa.String(), nullable=False),
    sa.Column('from_time', sa.DateTime(), nullable=True),
    sa.Column('to_time', sa.DateTime(), nullable=True),
    sa.Column('duration_in_minutes', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('wage', sa.Float(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('lesson_reminder_sent_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('attended', 'scheduled', 'bad cancellation student', 'bad cancellation teacher', 'good cancellation', 'expired', name='lessonstatus'), server_default='scheduled', nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_status'), 'lesson', ['status'], unique=False)
    op.create_index(op.f('ix_lesson_teacher_id'), 'lesson', ['teacher_id'], unique=False)
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', name='statusenum'), server_default='inactive', nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', name='genderenum'), server_default='male', nullable=False),
    sa.Column('first_name', sa.String(length=256), nullable=True),
    sa.Column('last_name', sa.String(length=256), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('email_lesson_reminder', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('email_lesson_notes', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('student_type', sa.Enum('child', 'independent', name='studenttypeenum'), server_default='independent', nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_customer_id'), 'student', ['customer_id'], unique=False)
    op.create_index(op.f('ix_student_email'), 'student', ['email'], unique=False)
    op.create_index(op.f('ix_student_gender'), 'student', ['gender'], unique=False)
    op.create_index(op.f('ix_student_status'), 'student', ['status'], unique=False)
    op.create_index(op.f('ix_student_student_type'), 'student', ['student_type'], unique=False)
    op.create_index(op.f('ix_student_user_id'), 'student', ['user_id'], unique=False)
    op.create_table('teacher_highschool',
    sa.Column('high_school_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['high_school_id'], ['high_school.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('high_school_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_highschool_high_school_id'), 'teacher_highschool', ['high_school_id'], unique=False)
    op.create_index(op.f('ix_teacher_highschool_teacher_id'), 'teacher_highschool', ['teacher_id'], unique=False)
    op.create_table('teacher_institution',
    sa.Column('higher_education_institution_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['higher_education_institution_id'], ['higher_education_institution.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('higher_education_institution_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_institution_higher_education_institution_id'), 'teacher_institution', ['higher_education_institution_id'], unique=False)
    op.create_index(op.f('ix_teacher_institution_teacher_id'), 'teacher_institution', ['teacher_id'], unique=False)
    op.create_table('teacher_interests',
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.uid'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('interest_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_interests_interest_id'), 'teacher_interests', ['interest_id'], unique=False)
    op.create_index(op.f('ix_teacher_interests_teacher_id'), 'teacher_interests', ['teacher_id'], unique=False)
    op.create_table('teacher_languages',
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.uid'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('language_id', 'teacher_id')
    )
    op.create_table('teacher_programme',
    sa.Column('higher_education_programme_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['higher_education_programme_id'], ['higher_education_programme.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('higher_education_programme_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_programme_higher_education_programme_id'), 'teacher_programme', ['higher_education_programme_id'], unique=False)
    op.create_index(op.f('ix_teacher_programme_teacher_id'), 'teacher_programme', ['teacher_id'], unique=False)
    op.create_table('teacher_programs',
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['program.uid'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('program_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_programs_program_id'), 'teacher_programs', ['program_id'], unique=False)
    op.create_index(op.f('ix_teacher_programs_teacher_id'), 'teacher_programs', ['teacher_id'], unique=False)
    op.create_table('teacher_qualifications',
    sa.Column('qualification_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualification.uid'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('qualification_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_qualifications_qualification_id'), 'teacher_qualifications', ['qualification_id'], unique=False)
    op.create_index(op.f('ix_teacher_qualifications_teacher_id'), 'teacher_qualifications', ['teacher_id'], unique=False)
    op.create_table('teacher_subjects',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.uid'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_subjects_subject_id'), 'teacher_subjects', ['subject_id'], unique=False)
    op.create_index(op.f('ix_teacher_subjects_teacher_id'), 'teacher_subjects', ['teacher_id'], unique=False)
    op.create_table('wage_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('referrals_amount', sa.Float(), nullable=True),
    sa.Column('referrals_number', sa.Float(), nullable=True),
    sa.Column('hours', sa.Float(), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('from_date', sa.DateTime(), nullable=True),
    sa.Column('to_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wage_payment_from_date'), 'wage_payment', ['from_date'], unique=False)
    op.create_index(op.f('ix_wage_payment_payment_date'), 'wage_payment', ['payment_date'], unique=False)
    op.create_index(op.f('ix_wage_payment_teacher_id'), 'wage_payment', ['teacher_id'], unique=False)
    op.create_index(op.f('ix_wage_payment_to_date'), 'wage_payment', ['to_date'], unique=False)
    op.create_table('order',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('hashed_id', sa.String(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('total_hours', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('package', sa.String(), nullable=False),
    sa.Column('installments', sa.Integer(), nullable=False),
    sa.Column('crm_deal_id', sa.String(), nullable=True),
    sa.Column('discount', sa.String(), nullable=True),
    sa.Column('stripe_url', sa.String(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('email_sent', sa.Boolean(), server_default='t', nullable=True),
    sa.Column('extra_student', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'paid', 'void', name='orderstatus'), server_default='pending', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('void_date', sa.DateTime(), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=True),
    sa.Column('upsell', sa.Boolean(), nullable=True),
    sa.Column('teachworks_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_order_active'), 'order', ['active'], unique=False)
    op.create_index(op.f('ix_order_balance_id'), 'order', ['balance_id'], unique=False)
    op.create_index(op.f('ix_order_customer_id'), 'order', ['customer_id'], unique=False)
    op.create_index(op.f('ix_order_hashed_id'), 'order', ['hashed_id'], unique=False)
    op.create_index(op.f('ix_order_status'), 'order', ['status'], unique=False)
    op.create_table('referral',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('referred_id', sa.Integer(), nullable=True),
    sa.Column('referrer_id', sa.Integer(), nullable=True),
    sa.Column('wage_payment_id', sa.Integer(), nullable=True),
    sa.Column('paid', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('referral_amount', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['referred_id'], ['teacher.id'], ),
    sa.ForeignKeyConstraint(['referrer_id'], ['teacher.id'], ),
    sa.ForeignKeyConstraint(['wage_payment_id'], ['wage_payment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referral_paid'), 'referral', ['paid'], unique=False)
    op.create_index(op.f('ix_referral_referred_id'), 'referral', ['referred_id'], unique=False)
    op.create_index(op.f('ix_referral_referrer_id'), 'referral', ['referrer_id'], unique=False)
    op.create_index(op.f('ix_referral_wage_payment_id'), 'referral', ['wage_payment_id'], unique=False)
    op.create_table('student_lessons',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'lesson_id')
    )
    op.create_index(op.f('ix_student_lessons_lesson_id'), 'student_lessons', ['lesson_id'], unique=False)
    op.create_index(op.f('ix_student_lessons_student_id'), 'student_lessons', ['student_id'], unique=False)
    op.create_table('teacher_students',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'teacher_id')
    )
    op.create_index(op.f('ix_teacher_students_student_id'), 'teacher_students', ['student_id'], unique=False)
    op.create_index(op.f('ix_teacher_students_teacher_id'), 'teacher_students', ['teacher_id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_transaction', sa.Enum('refund', 'payment', name='transactiontype'), server_default='payment', nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('balance_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('currency', sa.Enum('DKK', name='currencyenum'), server_default='DKK', nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('void', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('method', sa.Enum('bank', 'stripe', 'other', name='methodenum'), server_default='stripe', nullable=False),
    sa.Column('stripe_transaction_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['balance_id'], ['balance.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_balance_id'), 'transaction', ['balance_id'], unique=False)
    op.create_index(op.f('ix_transaction_customer_id'), 'transaction', ['customer_id'], unique=False)
    op.create_index(op.f('ix_transaction_method'), 'transaction', ['method'], unique=False)
    op.create_index(op.f('ix_transaction_type_transaction'), 'transaction', ['type_transaction'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_type_transaction'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_method'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_customer_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_balance_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_teacher_students_teacher_id'), table_name='teacher_students')
    op.drop_index(op.f('ix_teacher_students_student_id'), table_name='teacher_students')
    op.drop_table('teacher_students')
    op.drop_index(op.f('ix_student_lessons_student_id'), table_name='student_lessons')
    op.drop_index(op.f('ix_student_lessons_lesson_id'), table_name='student_lessons')
    op.drop_table('student_lessons')
    op.drop_index(op.f('ix_referral_wage_payment_id'), table_name='referral')
    op.drop_index(op.f('ix_referral_referrer_id'), table_name='referral')
    op.drop_index(op.f('ix_referral_referred_id'), table_name='referral')
    op.drop_index(op.f('ix_referral_paid'), table_name='referral')
    op.drop_table('referral')
    op.drop_index(op.f('ix_order_status'), table_name='order')
    op.drop_index(op.f('ix_order_hashed_id'), table_name='order')
    op.drop_index(op.f('ix_order_customer_id'), table_name='order')
    op.drop_index(op.f('ix_order_balance_id'), table_name='order')
    op.drop_index(op.f('ix_order_active'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_wage_payment_to_date'), table_name='wage_payment')
    op.drop_index(op.f('ix_wage_payment_teacher_id'), table_name='wage_payment')
    op.drop_index(op.f('ix_wage_payment_payment_date'), table_name='wage_payment')
    op.drop_index(op.f('ix_wage_payment_from_date'), table_name='wage_payment')
    op.drop_table('wage_payment')
    op.drop_index(op.f('ix_teacher_subjects_teacher_id'), table_name='teacher_subjects')
    op.drop_index(op.f('ix_teacher_subjects_subject_id'), table_name='teacher_subjects')
    op.drop_table('teacher_subjects')
    op.drop_index(op.f('ix_teacher_qualifications_teacher_id'), table_name='teacher_qualifications')
    op.drop_index(op.f('ix_teacher_qualifications_qualification_id'), table_name='teacher_qualifications')
    op.drop_table('teacher_qualifications')
    op.drop_index(op.f('ix_teacher_programs_teacher_id'), table_name='teacher_programs')
    op.drop_index(op.f('ix_teacher_programs_program_id'), table_name='teacher_programs')
    op.drop_table('teacher_programs')
    op.drop_index(op.f('ix_teacher_programme_teacher_id'), table_name='teacher_programme')
    op.drop_index(op.f('ix_teacher_programme_higher_education_programme_id'), table_name='teacher_programme')
    op.drop_table('teacher_programme')
    op.drop_table('teacher_languages')
    op.drop_index(op.f('ix_teacher_interests_teacher_id'), table_name='teacher_interests')
    op.drop_index(op.f('ix_teacher_interests_interest_id'), table_name='teacher_interests')
    op.drop_table('teacher_interests')
    op.drop_index(op.f('ix_teacher_institution_teacher_id'), table_name='teacher_institution')
    op.drop_index(op.f('ix_teacher_institution_higher_education_institution_id'), table_name='teacher_institution')
    op.drop_table('teacher_institution')
    op.drop_index(op.f('ix_teacher_highschool_teacher_id'), table_name='teacher_highschool')
    op.drop_index(op.f('ix_teacher_highschool_high_school_id'), table_name='teacher_highschool')
    op.drop_table('teacher_highschool')
    op.drop_index(op.f('ix_student_user_id'), table_name='student')
    op.drop_index(op.f('ix_student_student_type'), table_name='student')
    op.drop_index(op.f('ix_student_status'), table_name='student')
    op.drop_index(op.f('ix_student_gender'), table_name='student')
    op.drop_index(op.f('ix_student_email'), table_name='student')
    op.drop_index(op.f('ix_student_customer_id'), table_name='student')
    op.drop_table('student')
    op.drop_index(op.f('ix_lesson_teacher_id'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_status'), table_name='lesson')
    op.drop_table('lesson')
    op.drop_index(op.f('ix_balance_customer_id'), table_name='balance')
    op.drop_table('balance')
    op.drop_index(op.f('ix_Tutor course_tw_student_id'), table_name='Tutor course')
    op.drop_index(op.f('ix_Tutor course_tw_customer_id'), table_name='Tutor course')
    op.drop_index(op.f('ix_Tutor course_taken_by'), table_name='Tutor course')
    op.drop_index(op.f('ix_Tutor course_status'), table_name='Tutor course')
    op.drop_index(op.f('ix_Tutor course_hashed_id'), table_name='Tutor course')
    op.drop_index(op.f('ix_Tutor course_crm_deal_id'), table_name='Tutor course')
    op.drop_table('Tutor course')
    op.drop_table('tutor_subject')
    op.drop_index(op.f('ix_tokens_user_id'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_refresh_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_access_token'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_teacher_user_id'), table_name='teacher')
    op.drop_index(op.f('ix_teacher_status'), table_name='teacher')
    op.drop_index(op.f('ix_teacher_open_for_new_students'), table_name='teacher')
    op.drop_index(op.f('ix_teacher_gender'), table_name='teacher')
    op.drop_table('teacher')
    op.drop_index(op.f('ix_customer_user_id'), table_name='customer')
    op.drop_index(op.f('ix_customer_stripe_id'), table_name='customer')
    op.drop_index(op.f('ix_customer_status'), table_name='customer')
    op.drop_index(op.f('ix_customer_customer_type'), table_name='customer')
    op.drop_table('customer')
    op.drop_index(op.f('ix_admin_user_id'), table_name='admin')
    op.drop_table('admin')
    op.drop_index(op.f('ix_users_is_verified'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('tutor')
    op.drop_table('subjects')
    op.drop_table('qualification')
    op.drop_table('program')
    op.drop_index(op.f('ix_language_uid'), table_name='language')
    op.drop_table('language')
    op.drop_table('interest')
    op.drop_table('higher_education_programme')
    op.drop_table('higher_education_institution')
    op.drop_table('high_school')
    op.drop_table('contact_form_lead')
    op.drop_table('PhoneLead')
    # ### end Alembic commands ###
